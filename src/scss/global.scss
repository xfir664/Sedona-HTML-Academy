@use "./variables.scss" as var;

*,
*::before,
*::after {
  box-sizing: border-box;
}

#root {
  height: 100%;
}

html {
  height: 100%;
}

img {
  max-width: 100%;
  object-fit: contain;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

body {
  height: 100%;
  margin: 0;
  font-family: var(--font-base);
  background-color: #f2f2f2;
}

.main {
  flex-grow: 1;
}

.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  padding: 0 10px;
  max-width: var.$desktop-width;
  background-color: #ffffff;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);

  @media (min-width: var.$desktop-width) {
    padding: 0;
  }
}

.m-0 {
  margin: 0;
}

.list {
  padding: 0;
  list-style: none;
}

.error {
  color: #ff5757;
}

.grid-layout {
  display: grid;
  grid-template-columns: repeat(
    var(--grid-column),
    minmax(var(--grid-size), 1fr)
  );
  gap: var(--grid-gap);

  @media (min-width: var.$tablet-width) {
    grid-template-columns: repeat(
      var(--grid-column),
      minmax(var(--grid-size), 1fr)
    );
    gap: var(--grid-gap);
  }

  @media (min-width: var.$desktop-width) {
    grid-template-columns: repeat(
      var(--grid-column),
      minmax(auto, var(--grid-size))
    );
    gap: var(--grid-gap);
  }
}

.grid-column-full {
  grid-column: 1 / -1;
}
